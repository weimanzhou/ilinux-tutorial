
; =====================================================================
; 导出的函数或变量
; ---------------------------------------------------------------------
global _start

; =====================================================================
; 导入的函数或变量
; ---------------------------------------------------------------------
extern ilinux_main						; 内核主函数

; =====================================================================
; kernel data segment
; ---------------------------------------------------------------------
[section .data]
bits 32
	nop

; =====================================================================
; kernel stack segment
; ---------------------------------------------------------------------
[section .stack]
STACK_SPACE:		times 4 * 1024 db 0	; 4KB栈空间
STACK_TOP:								; 栈顶

; =====================================================================
; 内核代码段
; ---------------------------------------------------------------------
[section .text]
_start:								; 程序入口
	; reg reset
; 	; es = fs = ss = es， 在C语言中，它们是等同的
    mov ax, ds
	mov ss, ax
	mov es, ax
	mov fs, ax	
	mov sp, STACK_TOP

    mov edi, (80 * 11 + 0) * 2              ; 屏幕第10行,第0列
	mov ah, 0x0c                            ; 0000: 黑底 1100: 红字
	mov al, 'K'
	mov [gs:edi], ax
	add edi, 2
	mov al, 'N'
	mov [gs:edi], ax

	jmp ilinux_main					; 跳入到C语言的主函数
		

	jmp	$		; Start

